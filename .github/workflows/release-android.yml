name: Build Android Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code (integer)'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
      
    - name: Add Android platform
      run: npx cap add android
      
    - name: Update version info
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION_NAME="${{ github.event.inputs.version_name }}"
          VERSION_CODE="${{ github.event.inputs.version_code }}"
        else
          VERSION_NAME="${{ github.event.release.tag_name }}"
          VERSION_CODE="${{ github.run_number }}"
        fi
        
        # Update build.gradle with version info
        sed -i "s/versionCode 1/versionCode $VERSION_CODE/" android/app/build.gradle
        sed -i "s/versionName \"1.0\"/versionName \"$VERSION_NAME\"/" android/app/build.gradle
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Generate release keystore
      run: |
        keytool -genkey -v -keystore release.keystore -alias release -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=Open Fasting,OU=Open Fasting,O=Open Fasting,L=San Francisco,S=CA,C=US" \
          -storepass ${{ secrets.KEYSTORE_PASSWORD || 'defaultpassword' }} \
          -keypass ${{ secrets.KEY_PASSWORD || 'defaultpassword' }}
        
    - name: Create keystore.properties
      run: |
        echo "storeFile=../../release.keystore" > android/keystore.properties
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD || 'defaultpassword' }}" >> android/keystore.properties
        echo "keyAlias=release" >> android/keystore.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD || 'defaultpassword' }}" >> android/keystore.properties
        
    - name: Update build.gradle for release signing
      run: |
        sed -i '/android {/a\
        \    signingConfigs {\
        \        release {\
        \            def props = new Properties()\
        \            props.load(new FileInputStream(file("keystore.properties")))\
        \            storeFile file(props["storeFile"])\
        \            storePassword props["storePassword"]\
        \            keyAlias props["keyAlias"]\
        \            keyPassword props["keyPassword"]\
        \        }\
        \    }' android/app/build.gradle
        
        sed -i '/buildTypes {/,/}/ {
          /release {/a\
        \            signingConfig signingConfigs.release
        }' android/app/build.gradle
        
    - name: Build Android Release AAB
      run: |
        cd android
        chmod +x gradlew
        ./gradlew bundleRelease
        
    - name: Upload Release AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-release-aab-${{ github.run_number }}
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 90
        
    - name: Build Android Release APK
      run: |
        cd android
        ./gradlew assembleRelease
        
    - name: Upload Release APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-release-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 90